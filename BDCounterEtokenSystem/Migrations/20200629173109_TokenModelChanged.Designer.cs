// <auto-generated />
using System;
using BDCounterEtokenSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BDCounterEtokenSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200629173109_TokenModelChanged")]
    partial class TokenModelChanged
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BDCounterETokenSystem.Models.Booth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CounterId");

                    b.HasKey("Id");

                    b.HasIndex("CounterId");

                    b.ToTable("Booth");
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.Counter", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("BoothCount");

                    b.HasKey("Name");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppointmentTime");

                    b.Property<int>("BoothId");

                    b.Property<string>("CounterId");

                    b.Property<DateTime>("RequestDate");

                    b.Property<string>("RequestSlot")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TokenNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("BoothId");

                    b.HasIndex("CounterId");

                    b.HasIndex("TypeId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.TokenDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentNo");

                    b.Property<int>("TokenId");

                    b.HasKey("Id");

                    b.HasIndex("TokenId");

                    b.ToTable("TokenDetails");
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.TokenType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<TimeSpan>("ProcessDuration");

                    b.HasKey("Id");

                    b.ToTable("TokenTypes");
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.User", b =>
                {
                    b.Property<string>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Role");

                    b.HasKey("UId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("BDCounterETokenSystem.Models.Booth", b =>
                {
                    b.HasOne("BDCounterEtokenSystem.Models.Counter", "Counter")
                        .WithMany()
                        .HasForeignKey("CounterId");
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.Token", b =>
                {
                    b.HasOne("BDCounterETokenSystem.Models.Booth", "Booth")
                        .WithMany()
                        .HasForeignKey("BoothId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BDCounterEtokenSystem.Models.Counter", "Counter")
                        .WithMany()
                        .HasForeignKey("CounterId");

                    b.HasOne("BDCounterEtokenSystem.Models.TokenType", "TokenType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BDCounterEtokenSystem.Models.TokenDetail", b =>
                {
                    b.HasOne("BDCounterEtokenSystem.Models.Token", "Token")
                        .WithMany()
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
